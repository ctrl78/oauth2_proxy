name: Create Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    env:
      COVER: true
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        go: [ '1.15.x' ]
        goos: [linux]
        goarch: [amd64]
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      id: go

    - name: Get dependencies
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.24.0
        go mod download
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter

    - name: Verify Code Generation
      run: |
        make verify-generate

    - name: Lint
      run: |
        make lint

    - name: Build
      run: |
        make build

    - name: Test
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        ./.github/workflows/test.sh

    - name: Prepare release tarball
      run: |
        DIR=oauth2_proxy-$(echo ${{ github.ref }} | sed 's;refs/tags/v;;').0.linux-amd64.go${{ matrix.go }}
        echo "DIR=${DIR}" >> $GITHUB_ENV
        mkdir ${DIR}
        mv oauth2-proxy oauth2_proxy
        cp oauth2_proxy ${DIR}
        tar -czf ${DIR}.tar.gz ${DIR}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        files: oauth2_proxy-*.tar.gz
